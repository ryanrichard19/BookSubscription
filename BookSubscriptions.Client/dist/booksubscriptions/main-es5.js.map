{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.routing.ts","webpack:///src/app/account/login-form/login-form.component.ts","webpack:///src/app/account/login-form/login-form.component.html","webpack:///src/app/account/registration-form/registration-form.component.ts","webpack:///src/app/account/registration-form/registration-form.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.animation.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/books/books.component.ts","webpack:///src/app/books/books.component.html","webpack:///src/app/directives/auto-focus.directive.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.module.ts","webpack:///src/app/messages/messages.service.ts","webpack:///src/app/page-not-found.component.ts","webpack:///src/app/shared/configs/config.service.ts","webpack:///src/app/shared/modules/shared.module.ts","webpack:///src/app/shared/services/base.service.ts","webpack:///src/app/shared/services/book.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/app/star/star.component.ts","webpack:///src/app/star/star.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountModule","declarations","providers","imports","routing","forChild","path","component","LoginFormComponent","userService","router","pageTitle","loginForm","valid","email","form","value","password","login","subscribe","result","isLoggedIn","navigate","errors","errorMessage","selector","templateUrl","styleUrls","RegistrationFormComponent","spinner","submitted","userRegistration","FirstName","LastName","Email","Password","show","isRequesting","register","pipe","queryParams","brandNew","onSubmit","routes","redirectTo","pathMatch","AppRoutingModule","forRoot","slideInAnimation","position","width","zIndex","optional","transform","AppComponent","messageService","loading","events","routerEvent","checkRouterEvent","outlets","popup","isDisplayed","logout","navigateByUrl","animations","AppModule","bootstrap","BooksComponent","route","bookService","_listFilter","filteredBooks","books","listFilter","snapshot","queryParamMap","get","getBooks","next","performFilter","error","err","filterBy","toLocaleLowerCase","filter","book","title","indexOf","AutofocusDirective","el","setTimeout","nativeElement","focus","HomeComponent","MessagesComponent","messages","close","MessageModule","outlet","MessageService","_messages","message","currentDate","Date","unshift","toLocaleString","providedIn","PageNotFoundComponent","template","ConfigService","apiURI","SharedModule","BaseService","applicationError","headers","modelStateErrors","key","description","BookService","http","configService","booksUrl","baseUrl","getApiURI","data","handleError","UserService","authNavStatusSource","loggedIn","localStorage","getItem","user","post","console","log","JSON","stringify","res","setItem","authToken","removeItem","SpinnerComponent","isDelayedRunning","delay","clearTimeout","currentTimeout","undefined","cancelTimeout","window","StarComponent","rating","starWidth","ratingClicked","emit","onClick","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/modules/shared.module';\n\nimport { UserService } from '../shared/services/user.service';\n\n// import { EmailValidator } from '../directives/email.validator.directive';\n\nimport { routing } from './account.routing';\n\n@NgModule({\n  declarations: [RegistrationFormComponent, LoginFormComponent],\n  providers: [UserService],\n  imports: [CommonModule, FormsModule, routing, SharedModule],\n})\nexport class AccountModule {}\n","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nexport const routing: ModuleWithProviders = RouterModule.forChild([\n  { path: 'register', component: RegistrationFormComponent },\n  { path: 'login', component: LoginFormComponent }\n]);\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent {\n  errorMessage: string;\n  pageTitle = 'Log In';\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  login(loginForm: NgForm) {\n    if (loginForm && loginForm.valid) {\n      const email = loginForm.form.value.email;\n      const password = loginForm.form.value.password;\n      this.userService.login(email, password)\n      .subscribe(\n        (result) => {\n          if (result) {\n            if (this.userService.isLoggedIn) {\n              this.router.navigate(['/books']);\n            } else {\n              this.router.navigate(['']);\n            }\n          }\n        },\n        (errors) => (this.errorMessage = 'Please enter a email and password.')\n      );\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n      <form novalidate\n            (ngSubmit)=\"login(loginForm)\"\n            #loginForm=\"ngForm\"\n            autocomplete=\"off\">\n        <fieldset>\n  \n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\"\n                   for=\"emailId\">Email</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n                     id=\"emailId\"\n                     type=\"text\"\n                     placeholder=\"Email (required)\"\n                     required\n                     ngModel\n                     name=\"email\"\n                     #emailVar=\"ngModel\"\n                     [ngClass]=\"{'is-invalid': (emailVar.touched || emailVar.dirty) && !emailVar.valid }\" />\n              <span class=\"invalid-feedback\">\n                <span *ngIf=\"emailVar.errors?.required\">\n                  Email is required.\n                </span>\n              </span>\n            </div>\n          </div>\n  \n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form--label\"\n                   for=\"passwordId\">Password</label>\n  \n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n                     id=\"passwordId\"\n                     type=\"password\"\n                     placeholder=\"Password (required)\"\n                     required\n                     ngModel\n                     name=\"password\"\n                     #passwordVar=\"ngModel\"\n                     [ngClass]=\"{'is-invalid': (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid }\" />\n              <span class=\"invalid-feedback\">\n                <span *ngIf=\"passwordVar.errors?.required\">\n                  Password is required.\n                </span>\n              </span>\n            </div>\n          </div>\n  \n          <div class=\"row\">\n            <div class=\"col-md-4 offset-md-2\">\n              <button class=\"btn btn-primary mr-3\"\n                      type=\"submit\"\n                      style=\"width:80px\"\n                      [disabled]=\"!loginForm.valid\">\n                Log In\n              </button>\n              <button class=\"btn btn-outline-secondary\"\n                      type=\"button\"\n                      style=\"width:80px\"\n                      [routerLink]=\"['/welcome']\">\n                Cancel\n              </button>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  \n    <div class=\"alert alert-danger\"\n         *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UserRegistration } from 'src/app/shared/models/user.registration.interface';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss'],\n})\nexport class RegistrationFormComponent implements OnInit {\n  success: boolean;\n  errors: string;\n  isRequesting: boolean;\n  submitted = false;\n  userRegistration: UserRegistration = {\n    FirstName: 'testuser',\n    LastName: 'testuser',\n    Email: 'testuser@testuser.com',\n    Password: 'P@ssw0rd',\n  };\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {}\n  onSubmit() {\n    this.spinner.show();\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors = '';\n\n    this.userService\n      .register(this.userRegistration)\n      .pipe(\n        finalize(() => {\n          this.isRequesting = false;\n        })\n      )\n      .subscribe(\n        (result) => {\n          if (result) {\n            this.router.navigate(['/login'], {\n              queryParams: {\n                brandNew: true,\n                email: this.userRegistration.Email,\n              },\n            });\n          }\n        },\n        (errors) => (this.errors = errors)\n      );\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n      <h2>Please enter your information</h2>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-6\">\n        <form #f=\"ngForm\" novalidate (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"first-name\">First name</label>\n                <input type=\"text\" class=\"form-control\" id=\"first-name\" placeholder=\"First name\" name=\"firstName\" tmFocus [(ngModel)]=\"userRegistration.FirstName\">              \n            </div>\n            <div class=\"form-group\">\n                <label for=\"last-name\">Last name</label>\n                <input type=\"text\" class=\"form-control\" id=\"last-name\" placeholder=\"Last name\" name=\"lastName\" [(ngModel)]=\"userRegistration.LastName\">              \n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input id=\"email\" type=\"text\" required name=\"email\" validateEmail class=\"form-control\" placeholder=\"Email\" ngModel  [(ngModel)]=\"userRegistration.Email\">\n              <!-- <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small> -->\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"userRegistration.Password\">\n            </div>   \n  \n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Sign Up</button>\n     \n            </div>\n  \n            <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\n                <strong>Oops!</strong> {{errors}}\n              </div>               \n            \n          </form>\n     </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegistrationFormComponent } from './account/registration-form/registration-form.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { LoginFormComponent } from './account/login-form/login-form.component';\nimport { BooksComponent } from './books/books.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'books', component: BooksComponent },\n  { path: 'register', component: RegistrationFormComponent },\n  { path: 'login', component: LoginFormComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { trigger, animate, transition, style, group, query } from '@angular/animations';\n\nexport const slideInAnimation = trigger('slideInAnimation', [\n  // Transition between any two states\n  transition('* <=> *', [\n    // Events to apply\n    // Defined style and animation function to apply\n    // Config object with optional set to true to handle when element not yet added to the DOM\n    query(':enter, :leave', style({ position: 'fixed', width: '100%', zIndex: 2 }), { optional: true }),\n    // group block executes in parallel\n    group([\n      query(':enter', [\n        style({ transform: 'translateX(100%)' }),\n        animate('0.5s ease-out', style({ transform: 'translateX(0%)' }))\n      ], { optional: true }),\n      query(':leave', [\n        style({ transform: 'translateX(0%)' }),\n        animate('0.5s ease-out', style({ transform: 'translateX(-100%)' }))\n      ], { optional: true })\n    ])\n  ])\n]);","import { Component } from '@angular/core';\nimport { UserService } from './shared/services/user.service';\nimport { slideInAnimation } from './app.animation';\nimport {\n  Router,\n  Event,\n  NavigationStart,\n  NavigationEnd,\n  NavigationError,\n  NavigationCancel,\n} from '@angular/router';\nimport { MessageService } from './messages/messages.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation],\n})\nexport class AppComponent {\n  pageTitle = 'Book Subscriptions';\n  loading = true;\n\n  get isLoggedIn(): boolean {\n    return this.userService.isLoggedIn;\n    return false;\n  }\n\n  get isMessageDisplayed(): boolean {\n    //return this.messageService.isDisplayed;\n    return false;\n  }\n\n  get userName(): string {\n    // if (this.authService.currentUser) {\n    //   return this.authService.currentUser.userName;\n    // }\n    return '';\n  }\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private messageService: MessageService\n  ) {\n    router.events.subscribe((routerEvent: Event) => {\n      this.checkRouterEvent(routerEvent);\n    });\n  }\n\n  checkRouterEvent(routerEvent: Event): void {\n    if (routerEvent instanceof NavigationStart) {\n      this.loading = true;\n    }\n\n    if (\n      routerEvent instanceof NavigationEnd ||\n      routerEvent instanceof NavigationCancel ||\n      routerEvent instanceof NavigationError\n    ) {\n      this.loading = false;\n    }\n  }\n\n  displayMessages(): void {\n    this.router.navigate([{ outlets: { popup: ['messages'] } }]); // Works\n    this.messageService.isDisplayed = true;\n  }\n\n  hideMessages(): void {\n    this.router.navigate([{ outlets: { popup: null } }]);\n    this.messageService.isDisplayed = false;\n  }\n\n  logOut(): void {\n    this.userService.logout();\n    this.router.navigateByUrl('/home');\n  }\n}\n","<span class=\"fa fa-spinner spinner\"\n      *ngIf=\"loading\"></span>\n\n<!-- Main part of the menu-->\n<nav class=\"navbar navbar-expand navbar-light bg-light\">\n  <a class=\"navbar-brand\">{{pageTitle}}</a>\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\"\n         [routerLink]=\"['/home']\"\n         routerLinkActive=\"active\">Home</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\"\n         [routerLink]=\"['/books']\"\n         routerLinkActive=\"active\"\n         [routerLinkActiveOptions]=\"{ exact : true}\">Book List</a>\n    </li>\n  </ul>\n\n  <!-- Left justified part of the menu -->\n  <ul class=\"navbar-nav ml-auto\">\n    <li class=\"nav-item\"\n        *ngIf=\"isLoggedIn\">\n      <a class=\"nav-link\"\n         [routerLink]=\"['/login']\">Welcome {{ userName }}</a>\n    </li>\n    <li class=\"nav-item\"\n        *ngIf=\"!isMessageDisplayed\">\n      <a class=\"nav-link\"\n         (click)=\"displayMessages()\">Show Messages</a>\n    </li>\n    <li class=\"nav-item\"\n        *ngIf=\"isMessageDisplayed\">\n      <a class=\"nav-link\"\n         (click)=\"hideMessages()\">Hide Messages</a>\n    </li>\n    <li class=\"nav-item\"\n        *ngIf=\"!isLoggedIn\">\n      <a class=\"nav-link\"\n         [routerLink]=\"['/login']\">Log In</a>\n    </li>\n    <li class=\"nav-item\"\n    *ngIf=\"!isLoggedIn\">\n  <a class=\"nav-link\"\n     [routerLink]=\"['/register']\">Register</a>\n</li>\n    <li class=\"nav-item\"\n        *ngIf=\"isLoggedIn\">\n      <a class=\"nav-link\"\n         (click)=\"logOut()\">Log Out</a>\n    </li>\n  </ul>\n</nav>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-10\"\n         [@slideInAnimation]=\"o.isActivated ? o.activatedRoute : ''\">\n      <router-outlet #o=\"outlet\"></router-outlet>\n    </div>\n    <div class=\"col-md-2\">\n      <router-outlet name=\"popup\"></router-outlet>\n    </div>\n  </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { AccountModule } from './account/account.module';\nimport { SharedModule } from './shared/modules/shared.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfigService } from './shared/configs/config.service';\nimport { PageNotFoundComponent } from './page-not-found.component';\n\nimport { MessageModule } from './messages/messages.module';\nimport { UserService } from './shared/services/user.service';\nimport { BooksComponent } from './books/books.component';\nimport { BookService } from './shared/services/book.service';\nimport { StarComponent } from './star/star.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SpinnerComponent,\n    PageNotFoundComponent,\n    BooksComponent,\n    StarComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AccountModule,\n    SharedModule,\n    MessageModule,\n    HttpClientModule\n  ],\n  providers: [ConfigService, UserService, BookService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Book } from 'src/app/shared/models/book';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookService } from '../shared/services/book.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss'],\n})\nexport class BooksComponent implements OnInit {\n  pageTitle = 'Book List';\n\n  errorMessage = '';\n\n  _listFilter = '';\n\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredBooks = this.listFilter\n      ? this.performFilter(this.listFilter)\n      : this.books;\n  }\n\n  filteredBooks: Book[] = [];\n  books: Book[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private bookService: BookService\n  ) {}\n\n  ngOnInit(): void {\n    this.listFilter = this.route.snapshot.queryParamMap.get('filterBy') || '';\n    this.bookService.getBooks().subscribe({\n      next: (books) => {\n        this.books = books;\n        this.filteredBooks = this.performFilter(this.listFilter);\n      },\n      error: (err) => (this.errorMessage = err),\n    });\n  }\n\n  performFilter(filterBy: string): Book[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.books.filter(\n      (book: Book) => book.title.toLocaleLowerCase().indexOf(filterBy) !== -1\n    );\n  }\n}\n\n","<div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-md-2\">Filter by:</div>\n        <div class=\"col-md-4\">\n          <input type=\"text\"\n                 [(ngModel)]=\"listFilter\" />\n        </div>\n      </div>\n      <div class=\"row\"\n           *ngIf=\"listFilter\">\n        <div class=\"col-md-6\">\n          <h4>Filtered by: {{listFilter}}</h4>\n        </div>\n      </div>\n  \n      <div class=\"table-responsive\">\n        <table class=\"table mb-0\"\n               *ngIf=\"books && books.length\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Author</th>\n              <!-- <th>Description</th> -->\n              <th>Price</th>\n              <th>5 Star Rating</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let book of filteredBooks\">\n              <td>\n                <a [routerLink]=\"[book.id]\"\n                   [queryParams]=\"{filterBy: listFilter}\">\n                  {{ book.title }}\n                </a>\n              </td>\n              <td>{{ book.author }}</td>\n              <!-- <td>{{ book.description }}</td> -->\n              <td>{{ book.price | currency:\"ZAR\":\"symbol\":\"1.2-2\" }}</td>\n              <td>\n                <app-star [rating]=\"book.starRating\"> </app-star>\n              </td>\n              <td>\n                <button class=\"btn btn-outline-primary btn-sm\"\n                        [routerLink]=\"[book.id, 'edit']\">\n                  Subscribe\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n    </div>\n  </div>\n  \n  <div *ngIf=\"errorMessage\"\n       class=\"alert alert-danger\">\n    Error: {{ errorMessage }}\n  </div>\n","import { AfterContentInit, Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appAutoFocus]',\n})\nexport class AutofocusDirective implements AfterContentInit {\n  @Input() public appAutoFocus: boolean;\n\n  public constructor(private el: ElementRef) {}\n\n  public ngAfterContentInit() {\n    setTimeout(() => {\n      this.el.nativeElement.focus();\n    }, 500);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public pageTitle = 'Welcome';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Ryan Richard</h3>\n      </div>\n      <div class=\"text-center\">@ryanrichard</div>\n    </div>\n  </div>\n</div>\n\n\n\n     \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MessageService } from './messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n})\nexport class MessagesComponent implements OnInit {\n  constructor(private messageService: MessageService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  get messages() {\n    return this.messageService.messages;\n  }\n\n  close(): void {\n    // Close the popup.\n    this.router.navigate([{ outlets: { popup: null } }]);\n    this.messageService.isDisplayed = false;\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">Messages\n      <button class=\"btn btn-light btn-sm float-right\"\n              (click)=\"close()\">\n        X\n      </button>\n    </div>\n    <div class=\"card-body\">\n      <div *ngFor=\"let message of messages; let i=index\">\n        <div *ngIf=\"i<10\"\n             class=\"message-row\">\n          {{ message }}\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../shared/modules/shared.module';\n\nimport { MessagesComponent } from './messages.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: 'messages',\n        component: MessagesComponent,\n        outlet: 'popup'\n      }\n    ])\n  ],\n  declarations: [\n    MessagesComponent\n  ]\n})\nexport class MessageModule { }","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private _messages: string[] = [];\n  isDisplayed = false;\n\n  get messages(): string[] {\n    return this._messages;\n  }\n\n  addMessage(message: string): void {\n    const currentDate = new Date();\n    this.messages.unshift(message + ' at ' + currentDate.toLocaleString());\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n    <h1>This is not the page you were looking for!</h1>\n    `\n})\nexport class PageNotFoundComponent { }","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n  apiURI: string;\n\n  constructor() {\n    this.apiURI = 'https://localhost:5001/api';\n  }\n\n  getApiURI() {\n    return this.apiURI;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutofocusDirective } from '../../directives/auto-focus.directive';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AutofocusDirective],\n  exports: [\n    AutofocusDirective,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [],\n})\nexport class SharedModule {}\n","import { throwError } from 'rxjs';\n\nexport abstract class BaseService {\n  constructor() {}\n  \n\n  protected handleError(error: any) {\n    const applicationError = error.headers.get('Application-Error');\n\n    // either application-error in header or model error in body\n    if (applicationError) {\n      return throwError(applicationError);\n    }\n\n    let modelStateErrors = '';\n\n    // for now just concatenate the error descriptions, alternative we could simply pass the entire error response upstream\n    for (const key in error.error) {\n      if (error.error[key]) {\n        modelStateErrors += error.error[key].description + '\\n';\n      }\n    }\n\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return throwError(modelStateErrors || 'Server error');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { Book } from 'src/app/shared/models/book';\nimport { BaseService } from './base.service';\nimport { ConfigService } from '../configs/config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookService extends BaseService {\n  private booksUrl = '/book';\n  baseUrl = '';\n  public books: Book[];\n\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService\n    ) {\n    super();\n    this.baseUrl = configService.getApiURI();\n  }\n  \n\n  getBooks(): Observable<Book[]> {\n    return this.http.get<Book[]>(this.baseUrl + this.booksUrl).pipe(\n      tap((data) => {\n        this.books = data;\n      }),\n      catchError(this.handleError)\n      );\n    }\n\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { UserRegistration } from '../models/user.registration.interface';\nimport { ConfigService } from '../configs/config.service';\n\nimport { BaseService } from './base.service';\n\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class UserService extends BaseService {\n  baseUrl = '';\n\n  private authNavStatusSource = new BehaviorSubject<boolean>(false);\n\n  private loggedIn = false;\n\n  get isLoggedIn(): boolean {\n    return this.loggedIn;\n  }\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    super();\n    this.loggedIn = !!localStorage.getItem('auth_token');\n    // ?? not sure if this the best way to broadcast the status but seems to resolve issue on page refresh where auth status is lost in\n    // header component resulting in authed user nav links disappearing despite the fact user is still logged in\n    this.authNavStatusSource.next(this.loggedIn);\n    this.baseUrl = configService.getApiURI();\n  }\n\n  register(user: UserRegistration): Observable<UserRegistration> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http\n      .post<UserRegistration>(this.baseUrl + '/Accounts', user, {\n        headers,\n      })\n      .pipe(\n        tap((data) =>\n          console.log('User Registration: ' + JSON.stringify(data))\n        ),\n        catchError(this.handleError)\n      );\n  }\n\n  login(email, password) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http\n      .post(\n        this.baseUrl + '/auth/login',\n        JSON.stringify({ email, password }),\n        { headers }\n      )\n      .pipe(\n        tap((res: any) => {\n          localStorage.setItem('auth_token', res.authToken);\n          this.loggedIn = true;\n          this.authNavStatusSource.next(this.loggedIn);\n          return true;\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('auth_token');\n    this.loggedIn = false;\n    this.authNavStatusSource.next(this.loggedIn);\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Input  } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit, OnDestroy {\n\n  constructor() { }\n\n  @Input()\n  public set isRunning(value: boolean) {\n      if (!value) {\n          this.cancelTimeout();\n          this.isDelayedRunning = false;\n          return;\n      }\n\n      if (this.currentTimeout) {\n          return;\n      }\n\n      // specify window to side-step conflict with node types: https://github.com/mgechev/angular2-seed/issues/901\n      this.currentTimeout = window.setTimeout(() => {\n          this.isDelayedRunning = value;\n          this.cancelTimeout();\n      }, this.delay);\n  }\n\n  private currentTimeout: number;\n  public isDelayedRunning = false;\n\n  @Input()\n  public delay = 150;\n\n  ngOnInit(): void {\n  }\n\n  private cancelTimeout(): void {\n    clearTimeout(this.currentTimeout);\n    this.currentTimeout = undefined;\n}\n\n  ngOnDestroy(): any {\n    this.cancelTimeout();\n}\n\n}\n","<div [hidden]=\"!isDelayedRunning\" class=\"spinner\">  \n    <div class=\"double-bounce1\"></div>\n    <div class=\"double-bounce2\"></div>\n</div> \n","import {\n  Component,\n  OnChanges,\n  Input,\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.scss'],\n})\nexport class StarComponent implements OnChanges {\n  @Input() rating = 0;\n  starWidth = 0;\n  @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnChanges(): void {\n    this.starWidth = (this.rating * 75) / 5;\n  }\n\n  onClick(): void {\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\n  }\n}\n","<div class=\"crop\"\n     [style.width.px]=\"starWidth\"\n     [title]=\"rating\"\n     (click)=\"onClick()\">\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}